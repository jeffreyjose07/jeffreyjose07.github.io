name: Build and Deploy Portfolio with Blog

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-blog:
    runs-on: ubuntu-latest
    outputs:
      blog_changed: ${{ steps.blog-changes.outputs.blog_changed }}
      files_generated: ${{ steps.blog-generated.outputs.files_generated }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Check for blog changes
        id: blog-changes
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -E '^blog/(posts|templates|scripts|config\.json)' > /dev/null 2>&1 || [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "blog_changed=true" >> $GITHUB_OUTPUT
            echo "üìù Blog content changes detected or manual trigger"
          else
            echo "blog_changed=false" >> $GITHUB_OUTPUT
            echo "üìù No blog content changes detected"
          fi
      - name: Build blog
        if: steps.blog-changes.outputs.blog_changed == 'true'
        run: |
          echo "üöÄ Building blog with semantic coloring..."
          npm run build:blog
          echo "‚úÖ Blog build completed"
      - name: Check for generated blog files
        if: steps.blog-changes.outputs.blog_changed == 'true'
        id: blog-generated
        run: |
          if [ -n "$(git status --porcelain public/blog/)" ]; then
            echo "files_generated=true" >> $GITHUB_OUTPUT
            echo "üìÑ Generated blog files detected:"
            git status --porcelain public/blog/
          else
            echo "files_generated=false" >> $GITHUB_OUTPUT
            echo "üìÑ No new blog files generated"
          fi

  commit-blog:
    runs-on: ubuntu-latest
    needs: build-blog
    if: needs.build-blog.outputs.blog_changed == 'true' && needs.build-blog.outputs.files_generated == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Commit generated blog files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add public/blog/
          CHANGED_POSTS=$(git diff --name-only HEAD~1 HEAD | grep 'blog/posts/' | sed 's|blog/posts/||g' | sed 's|\.md$||g' | tr '\n' ',' | sed 's/,$//' || echo "")
          if [ -n "$CHANGED_POSTS" ]; then
            git commit -m "auto: rebuild blog posts ($CHANGED_POSTS)
            
            Generated HTML files from Markdown source with semantic coloring."
          else
            git commit -m "auto: rebuild blog
            
            Generated HTML files from updated templates or configuration."
          fi
          git push
          echo "‚úÖ Blog files committed and pushed"

  build-portfolio:
    runs-on: ubuntu-latest
    needs: [build-blog, commit-blog]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build portfolio
        run: |
          echo "üöÄ Building portfolio website..."
          npm run build
          echo "‚úÖ Portfolio build completed"

  deploy:
    runs-on: ubuntu-latest
    needs: build-portfolio
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      - name: Deployment summary
        run: |
          echo "üéâ Deployment completed successfully!"
          echo "üåê Portfolio URL: ${{ steps.deployment.outputs.page_url }}"
          echo "‚úÖ Site is now live on GitHub Pages"